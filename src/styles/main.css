body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-image: url("../images/HD-wallpaper-binary-colorful.jpg");
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    user-select: none; /*tira comportamento de selecionar como se fosse texto*/
}

.container {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 30px;
    background: rgba( 255, 255, 255, 0.35 );
    box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );
    backdrop-filter: blur( 13.5px );
    -webkit-backdrop-filter: blur( 13.5px );
    border-radius: 10px;
    border: 1px solid rgba( 255, 255, 255, 0.18 );
}

h1 {
    font-size: 2em;
    padding: 15px 0 0 0;
    color: #ffffff;
    text-transform: uppercase;
    letter-spacing: 0.1em;
}

#timer {
    border: 3px solid red;
    border-radius: 8px;
    width: 20%;
    color: red;
    font-size: 2em;
    font-weight: 800;
    text-align: center;
    margin: 10px;
}

.time {
    display: flex;
    flex-direction: row;
    width: 80%;
    align-items: center;
    justify-content: center;
}


.game {
    padding: 0 50px;
    width: 480px;
    height: 350px;
    align-items: center;
    justify-content: center;
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    transform-style: preserve-3d;
    perspective: 500px;
}

.item {
    border: 4px solid rgba(99, 235, 99, 0.596);
    border-radius: 5px; 
    position: relative;
    width: 85px;
    height: 85px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #ffffff;
    font-size: 3em; 
    transform: rotateY(180deg);
    transition: 0.25s;
}

.item img{
    width: 100%;
}

.item::after {
    content: "";
    position: absolute;
    inset: 0;
    background: #000000;
    transition: 0.25s;
    transform: rotateY(0deg);
    backface-visibility: hidden;
}

.item.boxOpen {
    transform: rotateY(0deg);
}

.boxOpen::after,
.boxMatch::after {
    transform: rotateY(180deg);
}